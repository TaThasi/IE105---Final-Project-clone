{"ast":null,"code":"import { Blockchain } from 'SavjeeCoin/src/blockchain';\nimport EC from 'elliptic';\nimport * as i0 from \"@angular/core\";\nexport let BlockchainService = /*#__PURE__*/(() => {\n  class BlockchainService {\n    constructor() {\n      this.blockchainInstance = new Blockchain();\n      this.walletKeys = [];\n      this.blockchainInstance.difficulty = 1;\n      this.blockchainInstance.minePendingTransactions('hi');\n      this.generateWalletKeys();\n    }\n\n    minePendingTransactions() {\n      this.blockchainInstance.minePendingTransactions(this.walletKeys[0].publicKey);\n    }\n\n    addressIsFromCurrentUser(address) {\n      return address === this.walletKeys[0].publicKey;\n    }\n\n    generateWalletKeys() {\n      const ec = new EC.ec('secp256k1');\n      const key = ec.genKeyPair();\n      this.walletKeys.push({\n        keyObj: key,\n        publicKey: key.getPublic('hex'),\n        privateKey: key.getPrivate('hex')\n      });\n      console.log(this.walletKeys);\n    }\n\n    getPendingTransactions() {\n      return this.blockchainInstance.pendingTransactions;\n    }\n\n    addTransaction(tx) {\n      this.blockchainInstance.addTransaction(tx);\n    }\n\n  }\n\n  BlockchainService.ɵfac = function BlockchainService_Factory(t) {\n    return new (t || BlockchainService)();\n  };\n\n  BlockchainService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BlockchainService,\n    factory: BlockchainService.ɵfac,\n    providedIn: 'root'\n  });\n  return BlockchainService;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Router } from '@angular/router';\nimport { BlockchainService } from '../../services/blockchain.service';\nimport { Transaction } from 'SavjeeCoin/src/blockchain';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/blockchain.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport let CreateTransactionComponent = /*#__PURE__*/(() => {\n  class CreateTransactionComponent {\n    constructor(blockchainService, router) {\n      this.blockchainService = blockchainService;\n      this.router = router;\n      this.newTx = new Transaction();\n      this.newTx = new Transaction();\n      this.ownWalletKey = blockchainService.walletKeys[0];\n    }\n\n    ngOnInit() {}\n\n    createTransaction() {\n      const newTx = this.newTx; // Set the FROM address and sign the transaction\n\n      newTx.fromAddress = this.ownWalletKey.publicKey;\n      newTx.signTransaction(this.ownWalletKey.keyObj);\n\n      try {\n        this.blockchainService.addTransaction(this.newTx);\n      } catch (e) {\n        alert(e);\n        return;\n      }\n\n      this.router.navigate(['/new/transaction/pending', {\n        addedTx: true\n      }]);\n      this.newTx = new Transaction();\n    }\n\n  }\n\n  CreateTransactionComponent.ɵfac = function CreateTransactionComponent_Factory(t) {\n    return new (t || CreateTransactionComponent)(i0.ɵɵdirectiveInject(i1.BlockchainService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  CreateTransactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateTransactionComponent,\n    selectors: [[\"app-create-transaction\"]],\n    decls: 26,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"form-group\"], [\"for\", \"fromAddress\"], [\"type\", \"text\", \"id\", \"fromAddress\", \"aria-describedby\", \"fromAddressHelp\", \"disabled\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"fromAddressHelp\", 1, \"form-text\", \"text-muted\"], [\"for\", \"toAddress\"], [\"type\", \"text\", \"id\", \"toAddress\", \"aria-describedby\", \"toAddressHelp\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"toAddressHelp\", 1, \"form-text\", \"text-muted\"], [\"for\", \"amount\"], [\"type\", \"number\", \"id\", \"amount\", \"aria-describedby\", \"amountHelp\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"amountHelp\", 1, \"form-text\", \"text-muted\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function CreateTransactionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"T\\u1EA1o giao d\\u1ECBch\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4, \"Chuy\\u1EC3n ti\\u1EC1n cho m\\u1ED9t ai \\u0111\\u00F3!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 2);\n        i0.ɵɵtext(8, \"From address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateTransactionComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.ownWalletKey.publicKey = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"small\", 4);\n        i0.ɵɵtext(11, \" \\u0110\\u00E2y l\\u00E0 \\u0111\\u1ECBa ch\\u1EC9 v\\u00ED c\\u1EE7a b\\u1EA1n. B\\u1EA1n kh\\u00F4ng th\\u1EC3 thay \\u0111\\u1ED5i n\\u00F3 v\\u00EC b\\u1EA1n ch\\u1EC9 c\\u00F3 th\\u1EC3 ti\\u00EAu ti\\u1EC1n c\\u1EE7a ch\\u00EDnh m\\u00ECnh. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 1)(13, \"label\", 5);\n        i0.ɵɵtext(14, \"To address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateTransactionComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.newTx.toAddress = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"small\", 7);\n        i0.ɵɵtext(17, \" \\u0110\\u1ECBa ch\\u1EC9 v\\u00ED m\\u00E0 b\\u1EA1n mu\\u1ED1n g\\u1EEDi ti\\u1EC1n t\\u1EDBi. B\\u1EA1n c\\u00F3 th\\u1EC3 nh\\u1EADp v\\u0103n b\\u1EA3n ng\\u1EABu nhi\\u00EAn t\\u1EA1i \\u0111\\u00E2y (n\\u1EBFu b\\u1EA1n kh\\u00F4ng quan t\\u00E2m \\u0111\\u1EBFn vi\\u1EC7c l\\u1EA5y l\\u1EA1i ti\\u1EC1n) \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 1)(19, \"label\", 8);\n        i0.ɵɵtext(20, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateTransactionComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.newTx.amount = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"small\", 10);\n        i0.ɵɵtext(23, \" B\\u1EA1n c\\u00F3 th\\u1EC3 chuy\\u1EC3n b\\u1EA5t k\\u1EF3 s\\u1ED1 ti\\u1EC1n n\\u00E0o. S\\u1ED1 d\\u01B0 t\\u00E0i kho\\u1EA3n kh\\u00F4ng \\u0111\\u01B0\\u1EE3c ki\\u1EC3m tra trong b\\u1EA3n demo n\\u00E0y. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function CreateTransactionComponent_Template_button_click_24_listener() {\n          return ctx.createTransaction();\n        });\n        i0.ɵɵtext(25, \"Sign & create transaction\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.ownWalletKey.publicKey);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.newTx.toAddress);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.newTx.amount);\n      }\n    },\n    dependencies: [i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgModel]\n  });\n  return CreateTransactionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}